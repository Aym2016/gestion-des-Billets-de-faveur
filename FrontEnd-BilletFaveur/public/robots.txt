# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:
*import React, { useEffect, useState } from 'react';
import {useHistory} from 'react-router-dom';
import moment from 'moment';
//import { getCompagnies,getCompagnie } from '../../actions/CompagnieAction';
//import AuthenticationService from './authenticationService';
import { makeStyles } from '@material-ui/core/styles';
import Table from '@material-ui/core/Table';
import TableBody from '@material-ui/core/TableBody';
import TableCell from '@material-ui/core/TableCell';
import TableContainer from '@material-ui/core/TableContainer';
import TableHead from '@material-ui/core/TableHead';
import TableRow from '@material-ui/core/TableRow';
import Paper from '@material-ui/core/Paper';
import Button from '@material-ui/core/Button';
import EditIcon from '@material-ui/icons/Edit';
import DeleteIcon from '@material-ui/icons/Delete';
import AddIcon from '@material-ui/icons/Add';

const useStyles = makeStyles({
    tableContainer:{
        padding:'10px'
    }, 
    table: {
      minWidth: 300,
      textAlign: 'center'
    },
    button: {
        backgroundColor: 'lightblue',
    },
    targetDate: {
        fontSize: '12px'
    }
});

/*
function listCompagnies(props) {
    const classes = useStyles();
    const [compagnies, getCompagnies] = useState([]);
    const [message, setMessage] = useState(null);
    const history = useHistory();
    useEffect(() => {
        refreshcompagnies();
        return function cleanup() {
        }

    }, []);

    const refreshcompagnies = () => {
        let username = CompagnieAction.getCompagnie();
    CompagnieAction.getCompagnies(username)
        .then( 
            response => {
                setcompagnies(response.data)
                }
            )
    }

    const deletecompagnieCLicked = (id) => {
        //let username = AuthenticationService.getLoggedInUserName();
        compagnieAction.deletecompagnie(username, id)
        .then (
            response => {
                refreshcompagnies();
                setMessage(`Deleted item`);
            }
        )
    }

    const updatecompagnieCLicked = (id) => {
        history.push(`/compagnie/${id}`);
       // let username = AuthenticationService.getLoggedInUserName();
    }

    const addcompagnieCLicked = (id) => {
        history.push(`/compagnie/-1`);
       / let username = AuthenticationService.getLoggedInUserName();
    }*/
    /*import {GET_COMPAGNIES, GET_COMPAGNIE, EDIT_COMPAGNIE, ADD_COMPAGNIE, DELETE_COMPAGNIE, URL} from "../keys"
    import axios from "axios"
    
    export const getCompagnies = () => async (dispatch) => {
        const res = await axios.get(URL + "/compagnie/all")
        await dispatch({
            type: GET_COMPAGNIES,
            data: res.data
        })
    
    }
    
    /*export const getRoomsFree = (obj) => async (dispatch) => {
         await axios.post(URL + "/COMPAGNIE/allFree", obj).then(re=>{
             console.log(re.data)
            dispatch({
                type: GET_COMPAGNIES,
                data: re.data
            })
        }).catch(e=>{
            console.log(e)
    
        })
    
    
    }*/
    
    /*export const getCOMPAGNIE = (id) => async (dispatch) => {
        await dispatch({
            type: GET_COMPAGNIE,
            data: id
        })
    
    }
    export const editCOMPAGNIE = (id) => async (dispatch) => {
        await dispatch({
            type: EDIT_COMPAGNIE,
            data: id
        })
    }
    export const addCompagnie = (u) => (dispatch) => {
        dispatch({
            type: ADD_COMPAGNIE,
            data: u
        })
    }
    
    export const deleteCompagnie = (id) => (dispatch) => {
        dispatch({
            type: DELETE_COMPAGNIE,
            data: id
        })
    }

    return (
        <div className="App">
            <TableContainer className={classes.tableContainer} component={Paper}>
                <Table className={classes.table} aria-label="simple table">
                    <TableHead>
                    <TableRow>
                        <TableCell></TableCell>
                        <TableCell></TableCell>
                        {/* <TableCell>Due Date</TableCell> */}
                        /*<TableCell></TableCell>
                    </TableRow>
                    </TableHead>
                    <TableBody>
                    {compagnies.map((row) => (
                        <TableRow key={row.id}>
                            <TableCell>
                            <Button 
                            className={classes.button} 
                            variant="contained"
                            onClick={() => updateCompagnie(row.id)}>
                                <EditIcon/>
                            </Button>
                        </TableCell>
                        <TableCell >{row.task}<br/><div className={classes.targetDate}>{moment(row.targetDate).format('DD/MM/YYYY')}</div></TableCell>
                        {/* <TableCell>{moment(row.targetDate).format('DD/MM/YYYY')}</TableCell> */}
                        </*TableCell>
                            <Button 
                                className={classes.button} 
                                variant="contained" 
                                onClick={() => deleteCompagnie(row.id)}
                            ><DeleteIcon/></Button>
                        </TableCell>
                        </TableRow>
                    ))}
                    </TableBody>
                </Table>
            </TableContainer>
            <div style={{padding: '10px'}}>{message}</div>
            <div style = {{padding: '20px'}}>
                <Button 
                    className={classes.button} 
                    variant="contained" 
                    onClick={() => addcompagnieCLicked(-1)}>
                    <AddIcon/>
                </Button>
            </div>
            
        </div>
  );


export default listCompagnies;
